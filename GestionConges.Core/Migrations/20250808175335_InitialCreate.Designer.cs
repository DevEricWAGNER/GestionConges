// <auto-generated />
using System;
using GestionConges.Core.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestionConges.Core.Migrations
{
    [DbContext(typeof(GestionCongesContext))]
    [Migration("20250808175335_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GestionConges.Core.Models.DemandeConge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Commentaire")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("CommentaireRefus")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModification")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateValidationFinale")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("NombreJours")
                        .HasPrecision(4, 1)
                        .HasColumnType("decimal(4,1)");

                    b.Property<int>("Statut")
                        .HasColumnType("int");

                    b.Property<int>("TypeAbsenceId")
                        .HasColumnType("int");

                    b.Property<int>("TypeJourneeDebut")
                        .HasColumnType("int");

                    b.Property<int>("TypeJourneeFin")
                        .HasColumnType("int");

                    b.Property<int>("UtilisateurId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TypeAbsenceId");

                    b.HasIndex("UtilisateurId");

                    b.ToTable("DemandesConges");
                });

            modelBuilder.Entity("GestionConges.Core.Models.Pole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Actif")
                        .HasColumnType("bit");

                    b.Property<int?>("ChefId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ChefId");

                    b.ToTable("Poles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Actif = true,
                            DateCreation = new DateTime(2025, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Équipe de développement logiciel",
                            Nom = "Développement"
                        },
                        new
                        {
                            Id = 2,
                            Actif = true,
                            DateCreation = new DateTime(2025, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Équipe infrastructure et réseaux",
                            Nom = "Réseaux"
                        },
                        new
                        {
                            Id = 3,
                            Actif = true,
                            DateCreation = new DateTime(2025, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Équipe Reflex",
                            Nom = "Reflex"
                        },
                        new
                        {
                            Id = 4,
                            Actif = true,
                            DateCreation = new DateTime(2025, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Équipe logistique et support",
                            Nom = "Logistique"
                        });
                });

            modelBuilder.Entity("GestionConges.Core.Models.TypeAbsence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Actif")
                        .HasColumnType("bit");

                    b.Property<string>("CouleurHex")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("NecessiteValidation")
                        .HasColumnType("bit");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("OrdreAffichage")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TypesAbsences");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Actif = true,
                            CouleurHex = "#e74c3c",
                            DateCreation = new DateTime(2025, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            NecessiteValidation = true,
                            Nom = "Congés Payés",
                            OrdreAffichage = 1
                        },
                        new
                        {
                            Id = 2,
                            Actif = true,
                            CouleurHex = "#3498db",
                            DateCreation = new DateTime(2025, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            NecessiteValidation = true,
                            Nom = "RTT",
                            OrdreAffichage = 2
                        },
                        new
                        {
                            Id = 3,
                            Actif = true,
                            CouleurHex = "#f39c12",
                            DateCreation = new DateTime(2025, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            NecessiteValidation = true,
                            Nom = "Maladie",
                            OrdreAffichage = 3
                        },
                        new
                        {
                            Id = 4,
                            Actif = true,
                            CouleurHex = "#27ae60",
                            DateCreation = new DateTime(2025, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            NecessiteValidation = true,
                            Nom = "Déplacement",
                            OrdreAffichage = 4
                        },
                        new
                        {
                            Id = 5,
                            Actif = true,
                            CouleurHex = "#9b59b6",
                            DateCreation = new DateTime(2025, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            NecessiteValidation = true,
                            Nom = "Formation",
                            OrdreAffichage = 5
                        });
                });

            modelBuilder.Entity("GestionConges.Core.Models.Utilisateur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Actif")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DerniereConnexion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MotDePasseHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("PoleId")
                        .HasColumnType("int");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Login")
                        .IsUnique();

                    b.HasIndex("PoleId");

                    b.ToTable("Utilisateurs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Actif = true,
                            DateCreation = new DateTime(2025, 1, 1, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin@entreprise.com",
                            Login = "admin",
                            MotDePasseHash = "$2a$11$rBV2HDeWlL.rsozGbz2gauO9H8sAzM7Ke.K5nCS5JoTa/4EK8TA4K",
                            Nom = "Admin",
                            Prenom = "Super",
                            Role = 2
                        });
                });

            modelBuilder.Entity("GestionConges.Core.Models.ValidationDemande", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Approuve")
                        .HasColumnType("bit");

                    b.Property<string>("Commentaire")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("DateValidation")
                        .HasColumnType("datetime2");

                    b.Property<int>("DemandeId")
                        .HasColumnType("int");

                    b.Property<int>("OrdreValidation")
                        .HasColumnType("int");

                    b.Property<int>("ValidateurId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DemandeId");

                    b.HasIndex("ValidateurId");

                    b.ToTable("ValidationsDemanades");
                });

            modelBuilder.Entity("GestionConges.Core.Models.DemandeConge", b =>
                {
                    b.HasOne("GestionConges.Core.Models.TypeAbsence", "TypeAbsence")
                        .WithMany("Demandes")
                        .HasForeignKey("TypeAbsenceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GestionConges.Core.Models.Utilisateur", "Utilisateur")
                        .WithMany("Demandes")
                        .HasForeignKey("UtilisateurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TypeAbsence");

                    b.Navigation("Utilisateur");
                });

            modelBuilder.Entity("GestionConges.Core.Models.Pole", b =>
                {
                    b.HasOne("GestionConges.Core.Models.Utilisateur", "Chef")
                        .WithMany()
                        .HasForeignKey("ChefId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Chef");
                });

            modelBuilder.Entity("GestionConges.Core.Models.Utilisateur", b =>
                {
                    b.HasOne("GestionConges.Core.Models.Pole", "Pole")
                        .WithMany("Employes")
                        .HasForeignKey("PoleId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Pole");
                });

            modelBuilder.Entity("GestionConges.Core.Models.ValidationDemande", b =>
                {
                    b.HasOne("GestionConges.Core.Models.DemandeConge", "Demande")
                        .WithMany("Validations")
                        .HasForeignKey("DemandeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionConges.Core.Models.Utilisateur", "Validateur")
                        .WithMany("ValidationsEffectuees")
                        .HasForeignKey("ValidateurId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Demande");

                    b.Navigation("Validateur");
                });

            modelBuilder.Entity("GestionConges.Core.Models.DemandeConge", b =>
                {
                    b.Navigation("Validations");
                });

            modelBuilder.Entity("GestionConges.Core.Models.Pole", b =>
                {
                    b.Navigation("Employes");
                });

            modelBuilder.Entity("GestionConges.Core.Models.TypeAbsence", b =>
                {
                    b.Navigation("Demandes");
                });

            modelBuilder.Entity("GestionConges.Core.Models.Utilisateur", b =>
                {
                    b.Navigation("Demandes");

                    b.Navigation("ValidationsEffectuees");
                });
#pragma warning restore 612, 618
        }
    }
}
